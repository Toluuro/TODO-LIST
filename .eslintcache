[{"C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\index.js":"1","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\App.js":"2","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\InputTodo.js":"3","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\ListTodos.js":"4","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\EditTodo.js":"5"},{"size":221,"mtime":1610294986447,"results":"6","hashOfConfig":"7"},{"size":345,"mtime":1610482842344,"results":"8","hashOfConfig":"7"},{"size":1057,"mtime":1610482012463,"results":"9","hashOfConfig":"7"},{"size":1704,"mtime":1610617615421,"results":"10","hashOfConfig":"7"},{"size":1797,"mtime":1610623045588,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1w3q4xc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\index.js",[],["26","27"],"C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\App.js",[],"C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\InputTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n\r\nconst [description, setDescription] = useState(\"\");\r\n\r\nconst onSubmitForm = async e => {\r\n    e.preventDefault();\r\n    try {\r\n       const body = { description };\r\n       const response = await fetch(\"http://localhost:5000/todos\", {\r\n           method:\"POST\",\r\n           headers:{ \"Content-Type\": \"application/json\" },\r\n           body: JSON.stringify(body)\r\n       }); \r\n\r\n       window.location = \"/\";\r\n    } catch (err) {\r\n        console.error(err.message)\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <h1 className=\"text-center mt-5\">Pern Todo List</h1>\r\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n            <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            value={description} \r\n            onChange={e => setDescription(e.target.value)}\r\n\r\n            />\r\n            <button className=\"btn btn-success\">Add</button>\r\n        </form>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default InputTodo;","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\ListTodos.js",["29"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\n\r\nconst ListTodos = () => {\r\n\r\nconst [todos, setTodos] = useState([]);\r\n\r\n// DELETE TODO FUNCTION\r\n\r\nconst deleteTodo = async (id) => {\r\n    try {\r\n        const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method:\"DELETE\"\r\n        });\r\n        \r\n        setTodos(todos.filter(todo => todo.todo_id !== id));\r\n\r\n    } catch (err) {\r\n        console.error(err.message);\r\n    }\r\n}\r\n\r\nconst getTodos = async() => {\r\n    try {\r\n        \r\n        const response = await fetch(\"http://localhost:5000/todos\");\r\n        const jsonData = await response.json();\r\n\r\n\r\n        setTodos(jsonData);\r\n\r\n    } catch (err) {\r\n        console.error(err.message);\r\n        \r\n    }\r\n}\r\n\r\nuseEffect(()=>{\r\n    getTodos();\r\n}, []);\r\n\r\n\r\n    return <Fragment>\r\n    {\" \"}\r\n    <table class =\"table mt-5 text-center table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>Description</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n\r\n    {/* {\r\n        <tr>\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>\r\n\r\n    } */}\r\n     {\r\n         todos.map(todo => (\r\n             <tr key={todo.todo_id}>\r\n                <td>{todo.description}</td>\r\n                <td>\r\n                 <EditTodo todo={todo} />\r\n                </td>\r\n                <td>\r\n                    <button className=\"btn btn-danger\" onClick={()=> deleteTodo(todo.todo_id)}>Delete</button>\r\n                </td>\r\n             </tr>\r\n         ))}\r\n      \r\n    </tbody>\r\n  </table>\r\n    </Fragment>\r\n    \r\n};\r\n\r\n\r\nexport default ListTodos;","C:\\Users\\Tolu\\Desktop\\Pern ToDo\\client\\src\\components\\EditTodo.js",["30"],"import React,{ Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ todo }) => {\r\n  const [description, setDescription] = useState(todo.description);\r\n\r\n\r\n// EDIT DESCRIPTION FUNCTION \r\n\r\nconst updateDescription = async(e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const body = { description };\r\n    const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`,{\r\n      method: \"PUT\",\r\n      headers:{\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(body)\r\n    });\r\n\r\n    window.location =\"/\";\r\n\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n}\r\n\r\n\r\n    return <Fragment>\r\n<button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>\r\n  Edit\r\n</button>\r\n\r\n<div class=\"modal\" id={`id${todo.todo_id}`}\r\nonClick={()=> setDescription(todo.description)}>\r\n\r\n\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Edit Todo</h4>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> setDescription(todo.description)}>&times;</button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n        <input type=\"text\" className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button \r\n        type=\"button\" \r\n        class=\"btn btn-warning\" \r\n        data-dismiss=\"modal\"\r\n        onClick = {e => updateDescription(e)}\r\n        >Edit</button>\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" onClick={()=> setDescription(todo.description)}>Close</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n    </Fragment>\r\n};\r\n\r\nexport default EditTodo;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":14,"nodeType":"37","messageId":"38","endLine":11,"endColumn":22},{"ruleId":"35","severity":1,"message":"39","line":13,"column":15,"nodeType":"37","messageId":"38","endLine":13,"endColumn":25},{"ruleId":"35","severity":1,"message":"36","line":13,"column":11,"nodeType":"37","messageId":"38","endLine":13,"endColumn":19},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]